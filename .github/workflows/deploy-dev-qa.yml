# .github/workflows/deploy-dev-qa.yml
name: Deploy to Dev/QA

on:
  pull_request:
    types: [opened, synchronize]
    branches: ['dev', 'qa']
  pull_request_target:
    types: [closed]
    branches: ['dev', 'qa']

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  validate:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install cfn-lint
        run: pip install cfn-lint
      
      - name: Lint CloudFormation templates
        run: |
          for template in templates/*.{yaml,yml}
          do
             if [ -f "$template" ]; then
              echo "Linting $template..."
              cfn-lint $template
            fi
          done

  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Determine environment
        id: env
        run: |
          BRANCH=${GITHUB_BASE_REF}
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          
          if [ "$BRANCH" = "dev" ]; then
            echo "account_id=${{ secrets.DEV_ACCOUNT_ID }}" >> $GITHUB_OUTPUT
          elif [ "$BRANCH" = "qa" ]; then
            echo "account_id=${{ secrets.QA_ACCOUNT_ID }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ steps.env.outputs.account_id }}:role/github-actions-role
          aws-region: us-east-1
          
      - name: Deploy
        run: |
          ./scripts/deploy.sh \
            ${{ steps.env.outputs.branch }} \
            my-stack \
            templates/main.yaml \
            environments/${{ steps.env.outputs.branch }}/parameters.json
